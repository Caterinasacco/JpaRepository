configurations {
	includeInJar {
		canBeResolved(true)
		canBeConsumed(false)
		transitive false
	}
}

sourceSets {
	main {
		compileClasspath += configurations.includeInJar
		runtimeClasspath += configurations.includeInJar
	}

	test {
		compileClasspath += configurations.includeInJar
		runtimeClasspath += configurations.includeInJar
	}
}

dependencies {
	//SLF4J
	implementation group: 'org.slf4j', name: 'slf4j-api', version: project.slf4jVersion
	implementation group: "javax.ws.rs", name: "javax.ws.rs-api", version: project.jaxWsRsApiVersion
	//lombok
	implementation group: 'org.projectlombok', name: 'lombok', version: project.lombokVersion
	annotationProcessor 'org.projectlombok:lombok:' + project.lombokVersion
	//Jackson
	implementation group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: project.jacksonVersion
	//Persistence
	implementation group: 'javax.persistence', name: 'javax.persistence-api', version: project.javaxPersistenceVersion
	implementation group: 'javax.transaction', name: 'javax.transaction-api', version: project.javaxTransactionApiVersion
	//Encryption
	implementation group: 'org.bouncycastle', name: 'bcmail-jdk15on', version: project.bouncyCastleVersion
	implementation group: 'it.water.distribution', name: 'Water-distribution-spring', version: project.waterVersion

	//Avoiding importing core deps since core libs are included inside spring distribution
	includeInJar ('it.water.repository:Repository-entity:'+project.waterVersion)
	includeInJar ('it.water.repository:Repository-persistence:'+project.waterVersion)
	includeInJar ('it.water.repository:Repository-service:'+project.waterVersion)
	includeInJar (project(":JpaRepository-javax"))

	//Spring for spring source set
	implementation 'org.springframework.boot:spring-boot-starter-aop:' + project.springBootVersion
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:' + project.springBootVersion
	implementation 'org.springframework.boot:spring-boot-starter-validation:' + project.springBootVersion

	implementation 'org.atteo.classindex:classindex:' + project.atteoClassIndexVersion
	annotationProcessor('org.atteo.classindex:classindex:' + project.atteoClassIndexVersion)

	//needed by spring
	testImplementation group: 'it.water.core', name: 'Core-api', version: project.waterVersion
	testImplementation group: 'it.water.core', name: 'Core-bundle', version: project.waterVersion
	testImplementation group: 'it.water.core', name: 'Core-interceptors', version: project.waterVersion
	testImplementation group: 'it.water.core', name: 'Core-model', version: project.waterVersion
	testImplementation group: 'it.water.core', name: 'Core-permission', version: project.waterVersion
	testImplementation group: 'it.water.core', name: 'Core-registry', version: project.waterVersion
	testImplementation group: 'it.water.core', name: 'Core-security', version: project.waterVersion
	testImplementation group: 'it.water.core', name: 'Core-service', version: project.waterVersion
	testImplementation group: 'it.water.core', name: 'Core-validation', version: project.waterVersion
	testImplementation group: 'it.water.core', name: 'Core-validation-javax', version: project.waterVersion
	testImplementation group: 'it.water.repository', name: 'Repository-entity', version: project.waterVersion
	testImplementation group: 'it.water.repository', name: 'Repository-persistence', version: project.waterVersion
	testImplementation group: 'it.water.repository', name: 'Repository-service', version: project.waterVersion
	testImplementation project(":JpaRepository-javax")
	testImplementation group: 'it.water.implementation', name: 'Implementation-spring', version: project.waterVersion
	testImplementation 'org.springframework.boot:spring-boot-starter-test:' + project.springBootVersion
	testImplementation 'org.junit.jupiter:junit-jupiter-api:' + project.junitJupiterVersion
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:' + project.junitJupiterVersion
	testImplementation 'org.atteo.classindex:classindex:' + project.atteoClassIndexVersion
	testImplementation 'org.hsqldb:hsqldb:2.4.0'
	testAnnotationProcessor('org.atteo.classindex:classindex:' + project.atteoClassIndexVersion)
	testAnnotationProcessor 'org.projectlombok:lombok:' + project.lombokVersion
}

jar {
	from project.configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) }
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

test {
	useJUnitPlatform()
}

publishing {
    	publications {
        	water(MavenPublication) {
            	from components.java
        	}
    }
 }
 